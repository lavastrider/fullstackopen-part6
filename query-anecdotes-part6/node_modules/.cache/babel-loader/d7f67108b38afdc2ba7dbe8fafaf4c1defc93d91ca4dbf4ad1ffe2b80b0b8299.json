{"ast":null,"code":"import axios from 'axios';\nimport { useContext } from 'react';\nimport AnexContext from './anecdotesContext';\nconst baseUrl = 'http://localhost:3001/anecdotes';\nconst [anexxer, anexDispatch] = useContext(AnexContext);\nexport const getAnec = () => axios.get(baseUrl).then(response => response.data);\nexport const createAnec = newAnec => {\n  //console.log(newAnec, 'is new anec in createanec in request')\n  newAnec.votes = 0;\n  //console.log(newAnec, 'is new anec in createanec in request after adding votes')\n  axios.post(baseUrl, newAnec).then(response => response.data).catch(error => {\n    //we want to send the error message up to notif\n    //this is the perfect situation for use context\n    //however get the error that react hooks must be called in function component\n    //or custom react hook function\n    console.log('we have a failed POST request');\n  });\n};\nexport const updateAnec = updatedAnec => axios.put(`${baseUrl}/${updatedAnec.id}`, updatedAnec).then(response => response.data);","map":{"version":3,"names":["axios","useContext","AnexContext","baseUrl","anexxer","anexDispatch","getAnec","get","then","response","data","createAnec","newAnec","votes","post","catch","error","console","log","updateAnec","updatedAnec","put","id"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/query-anecdotes-part6/src/requests.js"],"sourcesContent":["import axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport AnexContext from './anecdotesContext'\r\n\r\nconst baseUrl = 'http://localhost:3001/anecdotes'\r\n\r\nconst [anexxer, anexDispatch] = useContext(AnexContext)\r\n\r\n\r\nexport const getAnec = () =>\r\n  axios.get(baseUrl).then((response) => response.data)\r\n\r\nexport const createAnec = (newAnec) => {\r\n  //console.log(newAnec, 'is new anec in createanec in request')\r\n  newAnec.votes = 0\r\n  //console.log(newAnec, 'is new anec in createanec in request after adding votes')\r\n  axios\r\n    .post(baseUrl, newAnec)\r\n    .then((response) => response.data)\r\n    .catch((error) => {\r\n      //we want to send the error message up to notif\r\n      //this is the perfect situation for use context\r\n      //however get the error that react hooks must be called in function component\r\n      //or custom react hook function\r\n      console.log('we have a failed POST request')\r\n    })\r\n}\r\n  \r\nexport const updateAnec = updatedAnec => \r\n  axios.put(`${baseUrl}/${updatedAnec.id}`, updatedAnec).then((response) => response.data)\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,MAAMC,OAAO,GAAG,iCAAiC;AAEjD,MAAM,CAACC,OAAO,EAAEC,YAAY,CAAC,GAAGJ,UAAU,CAACC,WAAW,CAAC;AAGvD,OAAO,MAAMI,OAAO,GAAG,MACrBN,KAAK,CAACO,GAAG,CAACJ,OAAO,CAAC,CAACK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AAEtD,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAK;EACrC;EACAA,OAAO,CAACC,KAAK,GAAG,CAAC;EACjB;EACAb,KAAK,CACFc,IAAI,CAACX,OAAO,EAAES,OAAO,CAAC,CACtBJ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCK,KAAK,CAAEC,KAAK,IAAK;IAChB;IACA;IACA;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;EAC9C,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGC,WAAW,IACnCpB,KAAK,CAACqB,GAAG,CAAE,GAAElB,OAAQ,IAAGiB,WAAW,CAACE,EAAG,EAAC,EAAEF,WAAW,CAAC,CAACZ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}