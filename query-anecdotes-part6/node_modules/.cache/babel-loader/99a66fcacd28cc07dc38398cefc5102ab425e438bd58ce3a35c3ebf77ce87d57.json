{"ast":null,"code":"import axios from 'axios';\nimport { useContext } from 'react';\nimport AnexContext, { AnexContextProvider } from './anecdotesContext';\nimport index from './index';\nconst baseUrl = 'http://localhost:3001/anecdotes';\n\n//const [anexxer, anexDispatch] = useContext(AnexContext)\n\nexport const getAnec = () => axios.get(baseUrl).then(response => response.data);\nexport const createAnec = newAnec => {\n  //const [anexxer, anexDispatch] = useContext(AnexContext)\n  //console.log(newAnec, 'is new anec in createanec in request')\n  newAnec.votes = 0;\n  //console.log(newAnec, 'is new anec in createanec in request after adding votes') \n  const prom = axios.post(baseUrl, newAnec).then(response => response.data).catch(error => {\n    console.log(error, 'is error in createanec');\n    console.log(error.response, 'is error response in createanec');\n    console.log(error.response.data, 'is error response data in createanec');\n    console.log(error.response.data.error, 'is error response data error in createanec');\n    //return error.response.data.error\n  });\n  //console.log(testPromise, 'is testPromise in createanec')\n  return prom;\n};\nexport const updateAnec = updatedAnec => axios.put(`${baseUrl}/${updatedAnec.id}`, updatedAnec).then(response => response.data);","map":{"version":3,"names":["axios","useContext","AnexContext","AnexContextProvider","index","baseUrl","getAnec","get","then","response","data","createAnec","newAnec","votes","prom","post","catch","error","console","log","updateAnec","updatedAnec","put","id"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/query-anecdotes-part6/src/requests.js"],"sourcesContent":["import axios from 'axios'\r\nimport { useContext } from 'react'\r\nimport AnexContext, { AnexContextProvider } from './anecdotesContext'\r\nimport index from './index'\r\n\r\nconst baseUrl = 'http://localhost:3001/anecdotes'\r\n\r\n//const [anexxer, anexDispatch] = useContext(AnexContext)\r\n\r\nexport const getAnec = () =>\r\n  axios.get(baseUrl).then((response) => response.data)\r\n\r\nexport const createAnec = (newAnec) => {\r\n  //const [anexxer, anexDispatch] = useContext(AnexContext)\r\n  //console.log(newAnec, 'is new anec in createanec in request')\r\n  newAnec.votes = 0\r\n  //console.log(newAnec, 'is new anec in createanec in request after adding votes') \r\n  const prom = axios\r\n    .post(baseUrl, newAnec)\r\n    .then((response) => response.data)\r\n    .catch((error)=>{\r\n      console.log(error, 'is error in createanec')\r\n      console.log(error.response, 'is error response in createanec')\r\n      console.log(error.response.data, 'is error response data in createanec')\r\n      console.log(error.response.data.error, 'is error response data error in createanec')\r\n      //return error.response.data.error\r\n    })\r\n  //console.log(testPromise, 'is testPromise in createanec')\r\n  return prom\r\n}\r\n  \r\nexport const updateAnec = updatedAnec => \r\n  axios.put(`${baseUrl}/${updatedAnec.id}`, updatedAnec).then((response) => response.data)"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,IAAIC,mBAAmB,QAAQ,oBAAoB;AACrE,OAAOC,KAAK,MAAM,SAAS;AAE3B,MAAMC,OAAO,GAAG,iCAAiC;;AAEjD;;AAEA,OAAO,MAAMC,OAAO,GAAG,MACrBN,KAAK,CAACO,GAAG,CAACF,OAAO,CAAC,CAACG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AAEtD,OAAO,MAAMC,UAAU,GAAIC,OAAO,IAAK;EACrC;EACA;EACAA,OAAO,CAACC,KAAK,GAAG,CAAC;EACjB;EACA,MAAMC,IAAI,GAAGd,KAAK,CACfe,IAAI,CAACV,OAAO,EAAEO,OAAO,CAAC,CACtBJ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CACjCM,KAAK,CAAEC,KAAK,IAAG;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,EAAE,wBAAwB,CAAC;IAC5CC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACR,QAAQ,EAAE,iCAAiC,CAAC;IAC9DS,OAAO,CAACC,GAAG,CAACF,KAAK,CAACR,QAAQ,CAACC,IAAI,EAAE,sCAAsC,CAAC;IACxEQ,OAAO,CAACC,GAAG,CAACF,KAAK,CAACR,QAAQ,CAACC,IAAI,CAACO,KAAK,EAAE,4CAA4C,CAAC;IACpF;EACF,CAAC,CAAC;EACJ;EACA,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMM,UAAU,GAAGC,WAAW,IACnCrB,KAAK,CAACsB,GAAG,CAAE,GAAEjB,OAAQ,IAAGgB,WAAW,CAACE,EAAG,EAAC,EAAEF,WAAW,CAAC,CAACb,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}