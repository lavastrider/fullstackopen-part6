{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst filterSlice = createSlice({\n  name: 'filtering',\n  initialState: 'p',\n  reducers: {\n    filterReducer() {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      console.log('we are in filter reducer');\n      switch (action.type) {\n        case 'SET_FILTER':\n          //console.log('we are in the set filter case')\n          console.log(action.payload, 'is action payload');\n          return action.payload;\n        default:\n          console.log('we are in default action type case');\n          return state;\n      }\n    },\n    filterChange(filter) {\n      //console.log(filter, 'is filter in filter change') <- is proxy junk\n      console.log(JSON.parse(JSON.stringify(filter)), 'is json parse json stringify filter in filterchange');\n      console.log(JSON.parse(JSON.stringify(filter)).payload, 'is json parse json stringify filter payload in filterchange');\n      const pay = JSON.parse(JSON.stringify(filter)).payload;\n      console.log(pay, 'us pay');\n      return {\n        type: 'SET_FILTER',\n        payload: pay\n      };\n      //console.log(state, 'is state in filter change')\n    }\n  }\n});\n\nexport const {\n  filterReducer,\n  filterChange\n} = filterSlice.actions;\nexport default filterSlice.reducer;","map":{"version":3,"names":["createSlice","filterSlice","name","initialState","reducers","filterReducer","state","action","console","log","type","payload","filterChange","filter","JSON","parse","stringify","pay","actions","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/anecdotes-redux-part6/src/reducers/filterReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst filterSlice = createSlice({\r\n  name: 'filtering',\r\n  initialState: 'p',\r\n  reducers: {\r\n    filterReducer(state = '', action){\r\n      console.log('we are in filter reducer')\r\n      switch (action.type){\r\n        case 'SET_FILTER':\r\n          //console.log('we are in the set filter case')\r\n          console.log(action.payload, 'is action payload')\r\n          return action.payload\r\n        default:\r\n          console.log('we are in default action type case')\r\n          return state\r\n      }\r\n    },\r\n    filterChange(filter){\r\n      //console.log(filter, 'is filter in filter change') <- is proxy junk\r\n      console.log(JSON.parse(JSON.stringify(filter)), 'is json parse json stringify filter in filterchange')\r\n      console.log(JSON.parse(JSON.stringify(filter)).payload, 'is json parse json stringify filter payload in filterchange')\r\n      const pay = JSON.parse(JSON.stringify(filter)).payload\r\n      console.log(pay, 'us pay')\r\n      return {\r\n        type: 'SET_FILTER',\r\n        payload: pay\r\n      }\r\n      //console.log(state, 'is state in filter change')\r\n    }  \r\n  }\r\n})\r\n\r\n\r\nexport const { filterReducer, filterChange } = filterSlice.actions\r\nexport default filterSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,GAAG;EACjBC,QAAQ,EAAE;IACRC,aAAa,GAAoB;MAAA,IAAnBC,KAAK,uEAAG,EAAE;MAAA,IAAEC,MAAM;MAC9BC,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;MACvC,QAAQF,MAAM,CAACG,IAAI;QACjB,KAAK,YAAY;UACf;UACAF,OAAO,CAACC,GAAG,CAACF,MAAM,CAACI,OAAO,EAAE,mBAAmB,CAAC;UAChD,OAAOJ,MAAM,CAACI,OAAO;QACvB;UACEH,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;UACjD,OAAOH,KAAK;MAAA;IAElB,CAAC;IACDM,YAAY,CAACC,MAAM,EAAC;MAClB;MACAL,OAAO,CAACC,GAAG,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,MAAM,CAAC,CAAC,EAAE,qDAAqD,CAAC;MACtGL,OAAO,CAACC,GAAG,CAACK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,MAAM,CAAC,CAAC,CAACF,OAAO,EAAE,6DAA6D,CAAC;MACtH,MAAMM,GAAG,GAAGH,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,MAAM,CAAC,CAAC,CAACF,OAAO;MACtDH,OAAO,CAACC,GAAG,CAACQ,GAAG,EAAE,QAAQ,CAAC;MAC1B,OAAO;QACLP,IAAI,EAAE,YAAY;QAClBC,OAAO,EAAEM;MACX,CAAC;MACD;IACF;EACF;AACF,CAAC,CAAC;;AAGF,OAAO,MAAM;EAAEZ,aAAa;EAAEO;AAAa,CAAC,GAAGX,WAAW,CAACiB,OAAO;AAClE,eAAejB,WAAW,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}