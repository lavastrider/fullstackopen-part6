{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst notifSlice = createSlice({\n  name: 'notify',\n  initialState: '',\n  reducers: {\n    notifReducer() {\n      let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n      let action = arguments.length > 1 ? arguments[1] : undefined;\n      //console.log('we are in filter reducer')\n      //console.log(action.type, 'is action type')\n      switch (action.type) {\n        case 'filtering/filterReducer':\n          //console.log('we are in the set filter case')\n          //console.log(action.payload, 'is action payload')\n          return action.payload;\n        default:\n          //console.log('we are in default action type case')\n          return state;\n      }\n    },\n    notifShow(state, action) {},\n    notifHide(state, action) {}\n  }\n});\nexport const {\n  notifReducer,\n  notifShow,\n  notifHide\n} = notifSlice.actions;\nexport default notifSlice.reducer;","map":{"version":3,"names":["createSlice","notifSlice","name","initialState","reducers","notifReducer","state","action","type","payload","notifShow","notifHide","actions","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/anecdotes-redux-part6/src/reducers/notificationReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst notifSlice = createSlice({\r\n  name: 'notify',\r\n  initialState: '',\r\n  reducers: {\r\n    notifReducer(state = initialState, action){\r\n      //console.log('we are in filter reducer')\r\n      //console.log(action.type, 'is action type')\r\n      switch (action.type){\r\n        case 'filtering/filterReducer':\r\n          //console.log('we are in the set filter case')\r\n          //console.log(action.payload, 'is action payload')\r\n          return action.payload\r\n        default:\r\n          //console.log('we are in default action type case')\r\n          return state\r\n      }\r\n    },\r\n    notifShow(state, action) {\r\n    \r\n    \r\n    },\r\n    notifHide(state, action) {\r\n    \r\n    \r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport const { notifReducer, notifShow, notifHide } = notifSlice.actions\r\nexport default notifSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,YAAY,GAA8B;MAAA,IAA7BC,KAAK,uEAAGH,YAAY;MAAA,IAAEI,MAAM;MACvC;MACA;MACA,QAAQA,MAAM,CAACC,IAAI;QACjB,KAAK,yBAAyB;UAC5B;UACA;UACA,OAAOD,MAAM,CAACE,OAAO;QACvB;UACE;UACA,OAAOH,KAAK;MAAA;IAElB,CAAC;IACDI,SAAS,CAACJ,KAAK,EAAEC,MAAM,EAAE,CAGzB,CAAC;IACDI,SAAS,CAACL,KAAK,EAAEC,MAAM,EAAE,CAGzB;EACF;AACF,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEF,YAAY;EAAEK,SAAS;EAAEC;AAAU,CAAC,GAAGV,UAAU,CAACW,OAAO;AACxE,eAAeX,UAAU,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}