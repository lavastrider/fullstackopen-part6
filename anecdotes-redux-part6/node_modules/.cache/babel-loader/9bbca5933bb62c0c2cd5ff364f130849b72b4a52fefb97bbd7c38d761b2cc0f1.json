{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst notifSlice = createSlice({\n  name: 'notify',\n  initialState: '',\n  reducers: {\n    notifVote(state, action) {\n      console.log('we are in notif reducer');\n      console.log(action.type, 'is action type in notifreducer');\n      console.log(action.payload, 'is action payload in notifvote');\n      const msg = \"you voted for \";\n      const msgAdd = msg.concat(action.payload);\n      //console.log(msgAdd, 'is msg add')\n      return msgAdd;\n    },\n    notifHide(state, action) {\n      console.log('we are in notifHide');\n      console.log(action, 'is action in notifhide');\n      console.log(JSON.parse(JSON.stringify(state)), 'is state in notifhide');\n      return \" \";\n    },\n    notifAdd(state, action) {\n      console.log('we are in notifAdd');\n      //console.log(action.type, 'is action type')\n      //console.log('we are in the notif add case')\n      //console.log(action.payload, 'is action payload')\n      const msg = \"you created \";\n      const msgAdd = msg.concat(action.payload);\n      return msgAdd;\n    }\n  }\n});\nexport const {\n  notifVote,\n  notifHide,\n  notifAdd\n} = notifSlice.actions;\nexport default notifSlice.reducer;","map":{"version":3,"names":["createSlice","notifSlice","name","initialState","reducers","notifVote","state","action","console","log","type","payload","msg","msgAdd","concat","notifHide","JSON","parse","stringify","notifAdd","actions","reducer"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/anecdotes-redux-part6/src/reducers/notificationReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst notifSlice = createSlice({\r\n  name: 'notify',\r\n  initialState: '',\r\n  reducers: {\r\n    notifVote(state, action){\r\n      console.log('we are in notif reducer')\r\n      console.log(action.type, 'is action type in notifreducer')\r\n      console.log(action.payload, 'is action payload in notifvote')\r\n      const msg = \"you voted for \"\r\n      const msgAdd = msg.concat(action.payload)\r\n      //console.log(msgAdd, 'is msg add')\r\n      return msgAdd\r\n    },\r\n    notifHide(state, action) {\r\n      console.log('we are in notifHide')\r\n      console.log(action, 'is action in notifhide')\r\n      console.log(JSON.parse(JSON.stringify(state)), 'is state in notifhide')\r\n      return \" \"\r\n    \r\n    },\r\n    notifAdd(state, action){\r\n      console.log('we are in notifAdd')\r\n      //console.log(action.type, 'is action type')\r\n      //console.log('we are in the notif add case')\r\n      //console.log(action.payload, 'is action payload')\r\n      const msg = \"you created \"\r\n      const msgAdd = msg.concat(action.payload)\r\n      return msgAdd\r\n    }\r\n  }\r\n})\r\n\r\n\r\nexport const { notifVote, notifHide, notifAdd } = notifSlice.actions\r\nexport default notifSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,SAAS,CAACC,KAAK,EAAEC,MAAM,EAAC;MACtBC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;MACtCD,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,EAAE,gCAAgC,CAAC;MAC1DF,OAAO,CAACC,GAAG,CAACF,MAAM,CAACI,OAAO,EAAE,gCAAgC,CAAC;MAC7D,MAAMC,GAAG,GAAG,gBAAgB;MAC5B,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAM,CAACP,MAAM,CAACI,OAAO,CAAC;MACzC;MACA,OAAOE,MAAM;IACf,CAAC;IACDE,SAAS,CAACT,KAAK,EAAEC,MAAM,EAAE;MACvBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCD,OAAO,CAACC,GAAG,CAACF,MAAM,EAAE,wBAAwB,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACZ,KAAK,CAAC,CAAC,EAAE,uBAAuB,CAAC;MACvE,OAAO,GAAG;IAEZ,CAAC;IACDa,QAAQ,CAACb,KAAK,EAAEC,MAAM,EAAC;MACrBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;MACjC;MACA;MACA;MACA,MAAMG,GAAG,GAAG,cAAc;MAC1B,MAAMC,MAAM,GAAGD,GAAG,CAACE,MAAM,CAACP,MAAM,CAACI,OAAO,CAAC;MACzC,OAAOE,MAAM;IACf;EACF;AACF,CAAC,CAAC;AAGF,OAAO,MAAM;EAAER,SAAS;EAAEU,SAAS;EAAEI;AAAS,CAAC,GAAGlB,UAAU,CAACmB,OAAO;AACpE,eAAenB,UAAU,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}