{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport anecdoteReducer from './reducers/anecdoteReducer';\nimport filterReducer from './reducers/filterReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport wordService from './services/anecdotes';\nimport { newWords } from './reducers/anecdoteReducer';\nimport { useDispatch } from 'react-redux';\nwordService.getAll().then(phrases => {\n  var _s = $RefreshSig$();\n  _s(phrases.forEach(_s(words => {\n    _s();\n    console.log(words, 'is words in for each');\n    const datal = newWords(words);\n    console.log(datal, 'is datal');\n    useDispatch(newWords(words));\n    //store.dispatch(newWords(words))\n  }, \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n    return [useDispatch];\n  })), \"jI3HA1r1Cumjdbu14H7G+TUj798=\", false, function () {\n    return [useDispatch];\n  });\n});\nconst store = configureStore({\n  reducer: {\n    anecdotes: anecdoteReducer,\n    searchTerm: filterReducer,\n    notification: notificationReducer\n  }\n});\nconsole.log(store.getState(), 'is store get state in store.js');\nexport default store;","map":{"version":3,"names":["configureStore","anecdoteReducer","filterReducer","notificationReducer","wordService","newWords","useDispatch","getAll","then","phrases","forEach","words","console","log","datal","store","reducer","anecdotes","searchTerm","notification","getState"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/anecdotes-redux-part6/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\r\nimport anecdoteReducer from './reducers/anecdoteReducer'\r\nimport filterReducer from './reducers/filterReducer'\r\nimport notificationReducer from './reducers/notificationReducer'\r\nimport wordService from './services/anecdotes'\r\nimport { newWords } from './reducers/anecdoteReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nwordService.getAll().then((phrases) => {\r\n  phrases.forEach((words) => {\r\n    console.log(words, 'is words in for each')\r\n    const datal = newWords(words)\r\n    console.log(datal, 'is datal')\r\n    useDispatch(newWords(words))\r\n    //store.dispatch(newWords(words))\r\n  })\r\n})\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    anecdotes: anecdoteReducer,\r\n    searchTerm: filterReducer,\r\n    notification: notificationReducer\r\n  }  \r\n})\r\n\r\nconsole.log(store.getState(), 'is store get state in store.js')\r\n\r\nexport default store"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,eAAe,MAAM,4BAA4B;AACxD,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,mBAAmB,MAAM,gCAAgC;AAChE,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,WAAW,QAAQ,aAAa;AAEzCF,WAAW,CAACG,MAAM,EAAE,CAACC,IAAI,CAAEC,OAAO,IAAK;EAAA;EACrC,GAAAA,OAAO,CAACC,OAAO,IAAEC,KAAK,IAAK;IAAA;IACzBC,OAAO,CAACC,GAAG,CAACF,KAAK,EAAE,sBAAsB,CAAC;IAC1C,MAAMG,KAAK,GAAGT,QAAQ,CAACM,KAAK,CAAC;IAC7BC,OAAO,CAACC,GAAG,CAACC,KAAK,EAAE,UAAU,CAAC;IAC9BR,WAAW,CAACD,QAAQ,CAACM,KAAK,CAAC,CAAC;IAC5B;EACF,CAAC;IAAA,QAFCL,WAAW;EAAA,GAEX;IAAA,QAFAA,WAAW;EAAA;AAGf,CAAC,CAAC;AAEF,MAAMS,KAAK,GAAGf,cAAc,CAAC;EAC3BgB,OAAO,EAAE;IACPC,SAAS,EAAEhB,eAAe;IAC1BiB,UAAU,EAAEhB,aAAa;IACzBiB,YAAY,EAAEhB;EAChB;AACF,CAAC,CAAC;AAEFS,OAAO,CAACC,GAAG,CAACE,KAAK,CAACK,QAAQ,EAAE,EAAE,gCAAgC,CAAC;AAE/D,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}