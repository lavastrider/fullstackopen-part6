{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part6\\\\anecdotes-redux-part6\\\\src\\\\components\\\\AnecdotesList.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toAddVote } from '../reducers/anecdoteReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Anecdotes = () => {\n  _s();\n  //const test = useSelector(state => state)\n  //console.log(test, 'is test in anecdotes')\n\n  const words = useSelector(state => {\n    console.log(state.searchTerm, 'is state search term');\n    if (state.searchTerm) {\n      console.log('we are in the results that match the search term');\n      console.log(state.anecdotes, 'is state dot anecdotes');\n      console.log(state.searchTerm, 'is state search term');\n      console.log(state.searchTerm.payload, 'is state search term payload');\n      return state.anecdotes.filter(phrase => phrase.content.toLowerCase().includes(state.searchTerm.toLowerCase()));\n    }\n    console.log(state.anecdotes, 'is state anecdotes');\n    return state.anecdotes.sort((a, b) => b.votes - a.votes);\n  });\n\n  //const anecdotalSort = anecdotes.anecdotes.sort((a,b) => b.votes-a.votes)\n\n  //const testAnec = anecdotal.filter((phrase) => phrase.content.toLowerCase().includes('x'))\n  //console.log(testAnec, 'is test anec')\n\n  const dispatch = useDispatch();\n  const vote = id => {\n    dispatch(toAddVote(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: words.map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => vote(anecdote.id),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Anecdotes, \"ZVYZCfPMAcpq6G1YKPHoi2trNkg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Anecdotes;\nexport default Anecdotes;\nvar _c;\n$RefreshReg$(_c, \"Anecdotes\");","map":{"version":3,"names":["useSelector","useDispatch","toAddVote","Anecdotes","words","state","console","log","searchTerm","anecdotes","payload","filter","phrase","content","toLowerCase","includes","sort","a","b","votes","dispatch","vote","id","map","anecdote"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/anecdotes-redux-part6/src/components/AnecdotesList.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\r\nimport { toAddVote } from '../reducers/anecdoteReducer'\r\n\r\nconst Anecdotes = () => {\r\n  //const test = useSelector(state => state)\r\n  //console.log(test, 'is test in anecdotes')\r\n  \r\n  const words = useSelector((state) => {\r\n   console.log(state.searchTerm, 'is state search term')\r\n    if (state.searchTerm) {\r\n      console.log('we are in the results that match the search term')\r\n      console.log(state.anecdotes, 'is state dot anecdotes')\r\n      console.log(state.searchTerm, 'is state search term')\r\n      console.log(state.searchTerm.payload, 'is state search term payload')\r\n      return state.anecdotes.filter((phrase) => phrase.content.toLowerCase().includes(state.searchTerm.toLowerCase()))\r\n    }\r\n    console.log(state.anecdotes, 'is state anecdotes')\r\n    return state.anecdotes.sort((a,b) => b.votes-a.votes)\r\n  })\r\n  \r\n  //const anecdotalSort = anecdotes.anecdotes.sort((a,b) => b.votes-a.votes)\r\n  \r\n  //const testAnec = anecdotal.filter((phrase) => phrase.content.toLowerCase().includes('x'))\r\n  //console.log(testAnec, 'is test anec')\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const vote = (id) => {\r\n    dispatch(toAddVote(id))\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {words.map(anecdote =>\r\n        <div key={anecdote.id}>\r\n          <div>\r\n            {anecdote.content}\r\n          </div>\r\n          <div>\r\n            has {anecdote.votes}\r\n            <button onClick={() => vote(anecdote.id)}>vote</button>\r\n          </div>\r\n        </div>\r\n      )}    \r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default Anecdotes"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,QAAQ,6BAA6B;AAAA;AAEvD,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB;EACA;;EAEA,MAAMC,KAAK,GAAGJ,WAAW,CAAEK,KAAK,IAAK;IACpCC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,UAAU,EAAE,sBAAsB,CAAC;IACpD,IAAIH,KAAK,CAACG,UAAU,EAAE;MACpBF,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;MAC/DD,OAAO,CAACC,GAAG,CAACF,KAAK,CAACI,SAAS,EAAE,wBAAwB,CAAC;MACtDH,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,UAAU,EAAE,sBAAsB,CAAC;MACrDF,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,UAAU,CAACE,OAAO,EAAE,8BAA8B,CAAC;MACrE,OAAOL,KAAK,CAACI,SAAS,CAACE,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACV,KAAK,CAACG,UAAU,CAACM,WAAW,EAAE,CAAC,CAAC;IAClH;IACAR,OAAO,CAACC,GAAG,CAACF,KAAK,CAACI,SAAS,EAAE,oBAAoB,CAAC;IAClD,OAAOJ,KAAK,CAACI,SAAS,CAACO,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAACF,CAAC,CAACE,KAAK,CAAC;EACvD,CAAC,CAAC;;EAEF;;EAEA;EACA;;EAEA,MAAMC,QAAQ,GAAGnB,WAAW,EAAE;EAE9B,MAAMoB,IAAI,GAAIC,EAAE,IAAK;IACnBF,QAAQ,CAAClB,SAAS,CAACoB,EAAE,CAAC,CAAC;EACzB,CAAC;EAED,oBACE;IAAA,UACGlB,KAAK,CAACmB,GAAG,CAACC,QAAQ,iBACjB;MAAA,wBACE;QAAA,UACGA,QAAQ,CAACX;MAAO;QAAA;QAAA;QAAA;MAAA,QACb,eACN;QAAA,WAAK,MACC,EAACW,QAAQ,CAACL,KAAK,eACnB;UAAQ,OAAO,EAAE,MAAME,IAAI,CAACG,QAAQ,CAACF,EAAE,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACnD;IAAA,GAPEE,QAAQ,CAACF,EAAE;MAAA;MAAA;MAAA;IAAA,QAQf;EACP;IAAA;IAAA;IAAA;EAAA,QACG;AAGV,CAAC;AAAA,GA5CKnB,SAAS;EAAA,QAICH,WAAW,EAkBRC,WAAW;AAAA;AAAA,KAtBxBE,SAAS;AA8Cf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}