{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst filterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  //console.log('we are in filter reducer')\n  switch (action.type) {\n    case 'SET_FILTER':\n      //console.log('we are in the set filter case')\n      //console.log(action.payload, 'is action payload')\n      return action.payload;\n    default:\n      return state;\n  }\n};\nexport const filterChange = filter => {\n  return {\n    type: 'SET_FILTER',\n    payload: filter\n  };\n};\nexport default filterReducer;","map":{"version":3,"names":["createSlice","filterReducer","state","action","type","payload","filterChange","filter"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/anecdotes-redux-part6/src/reducers/filterReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst filterReducer = (state = '', action) => {\r\n  //console.log('we are in filter reducer')\r\n  switch (action.type) {\r\n    case 'SET_FILTER':\r\n      //console.log('we are in the set filter case')\r\n      //console.log(action.payload, 'is action payload')\r\n      return action.payload\r\n    default:\r\n      return state \r\n  }\r\n}\r\n\r\nexport const filterChange = (filter) => {\r\n  return {\r\n    type: 'SET_FILTER',\r\n    payload: filter\r\n  }\r\n}\r\n\r\nexport default filterReducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,aAAa,GAAG,YAAwB;EAAA,IAAvBC,KAAK,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACvC;EACA,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf;MACA;MACA,OAAOD,MAAM,CAACE,OAAO;IACvB;MACE,OAAOH,KAAK;EAAA;AAElB,CAAC;AAED,OAAO,MAAMI,YAAY,GAAIC,MAAM,IAAK;EACtC,OAAO;IACLH,IAAI,EAAE,YAAY;IAClBC,OAAO,EAAEE;EACX,CAAC;AACH,CAAC;AAED,eAAeN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}