{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bilstr\\\\Documents\\\\GitHub\\\\part6\\\\anecdotes-redux-part6\\\\src\\\\components\\\\AnecdotesList.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addVote } from '../reducers/anecdoteReducer';\nimport { notifVote, notifHide } from '../reducers/notificationReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Anecdotes = () => {\n  _s();\n  //const test = useSelector(state => state.anecdotes)\n  //console.log(test, 'is test in anecdotes')\n  let arrayForSort = [];\n  const words = useSelector(state => {\n    if (state.searchTerm) {\n      console.log('we are in the results that match the search term');\n      //console.log(state.anecdotes, 'is state dot anecdotes')\n      console.log(state.searchTerm, 'is state search term');\n      //console.log(state.searchTerm.payload, 'is state search term payload')\n      return state.anecdotes.filter(phrase => phrase.content.toLowerCase().includes(state.searchTerm.toLowerCase()));\n    }\n    //console.log(state.anecdotes, 'is state anecdotes')\n    arrayForSort = [...state.anecdotes];\n    //copy is needed because sort directly edits the variable\n    return arrayForSort.sort((a, b) => b.votes - a.votes);\n    //return state.anecdotes\n  });\n\n  //const anecdotalSort = anecdotes.anecdotes.sort((a,b) => b.votes-a.votes)\n\n  //const testAnec = anecdotal.filter((phrase) => phrase.content.toLowerCase().includes('x'))\n  //console.log(testAnec, 'is test anec')\n\n  const dispatch = useDispatch();\n  const vote = (id, words) => {\n    dispatch(addVote(id));\n    dispatch(notifVote(words));\n    setTimeout(() => dispatch(notifHide(id)), 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: words.map(anecdote => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: anecdote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"has \", anecdote.votes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => vote(anecdote.id, anecdote.content),\n          children: \"vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, anecdote.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  //   return (\n  //    <p>glasses</p>\n  //   )\n  //  return (\n  //   <p>tee hee</p>\n  //  )\n};\n_s(Anecdotes, \"ZVYZCfPMAcpq6G1YKPHoi2trNkg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Anecdotes;\nexport default Anecdotes;\nvar _c;\n$RefreshReg$(_c, \"Anecdotes\");","map":{"version":3,"names":["useSelector","useDispatch","addVote","notifVote","notifHide","Anecdotes","arrayForSort","words","state","searchTerm","console","log","anecdotes","filter","phrase","content","toLowerCase","includes","sort","a","b","votes","dispatch","vote","id","setTimeout","map","anecdote"],"sources":["C:/Users/bilstr/Documents/GitHub/part6/anecdotes-redux-part6/src/components/AnecdotesList.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux'\r\nimport { addVote } from '../reducers/anecdoteReducer'\r\nimport { notifVote, notifHide } from '../reducers/notificationReducer'\r\n\r\nconst Anecdotes = () => {\r\n  //const test = useSelector(state => state.anecdotes)\r\n  //console.log(test, 'is test in anecdotes')\r\n  let arrayForSort = []\r\n  \r\n  const words = useSelector((state) => {\r\n    if (state.searchTerm) {\r\n      console.log('we are in the results that match the search term')\r\n      //console.log(state.anecdotes, 'is state dot anecdotes')\r\n      console.log(state.searchTerm, 'is state search term')\r\n      //console.log(state.searchTerm.payload, 'is state search term payload')\r\n      return state.anecdotes.filter((phrase) => phrase.content.toLowerCase().includes(state.searchTerm.toLowerCase()))\r\n    }\r\n    //console.log(state.anecdotes, 'is state anecdotes')\r\n    arrayForSort = [...state.anecdotes]\r\n    //copy is needed because sort directly edits the variable\r\n    return arrayForSort.sort((a,b) => b.votes-a.votes)\r\n    //return state.anecdotes\r\n  })\r\n  \r\n  //const anecdotalSort = anecdotes.anecdotes.sort((a,b) => b.votes-a.votes)\r\n  \r\n  //const testAnec = anecdotal.filter((phrase) => phrase.content.toLowerCase().includes('x'))\r\n  //console.log(testAnec, 'is test anec')\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const vote = (id, words) => {\r\n    dispatch(addVote(id))\r\n    dispatch(notifVote(words))\r\n    setTimeout(()=>dispatch(notifHide(id)), 5000)\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      {words.map(anecdote =>\r\n        <div key={anecdote.id}>\r\n          <div>\r\n            {anecdote.content}\r\n          </div>\r\n          <div>\r\n            has {anecdote.votes}\r\n            <button onClick={() => vote(anecdote.id, anecdote.content)}>vote</button>\r\n          </div>\r\n        </div>\r\n      )}    \r\n    </div>\r\n  )\r\n//   return (\r\n//    <p>glasses</p>\r\n//   )\r\n//  return (\r\n//   <p>tee hee</p>\r\n//  )\r\n}\r\n\r\nexport default Anecdotes"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,6BAA6B;AACrD,SAASC,SAAS,EAAEC,SAAS,QAAQ,iCAAiC;AAAA;AAEtE,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB;EACA;EACA,IAAIC,YAAY,GAAG,EAAE;EAErB,MAAMC,KAAK,GAAGP,WAAW,CAAEQ,KAAK,IAAK;IACnC,IAAIA,KAAK,CAACC,UAAU,EAAE;MACpBC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;MAC/D;MACAD,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,UAAU,EAAE,sBAAsB,CAAC;MACrD;MACA,OAAOD,KAAK,CAACI,SAAS,CAACC,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,OAAO,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACT,KAAK,CAACC,UAAU,CAACO,WAAW,EAAE,CAAC,CAAC;IAClH;IACA;IACAV,YAAY,GAAG,CAAC,GAAGE,KAAK,CAACI,SAAS,CAAC;IACnC;IACA,OAAON,YAAY,CAACY,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKA,CAAC,CAACC,KAAK,GAACF,CAAC,CAACE,KAAK,CAAC;IAClD;EACF,CAAC,CAAC;;EAEF;;EAEA;EACA;;EAEA,MAAMC,QAAQ,GAAGrB,WAAW,EAAE;EAE9B,MAAMsB,IAAI,GAAG,CAACC,EAAE,EAAEjB,KAAK,KAAK;IAC1Be,QAAQ,CAACpB,OAAO,CAACsB,EAAE,CAAC,CAAC;IACrBF,QAAQ,CAACnB,SAAS,CAACI,KAAK,CAAC,CAAC;IAC1BkB,UAAU,CAAC,MAAIH,QAAQ,CAAClB,SAAS,CAACoB,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;EAC/C,CAAC;EAED,oBACE;IAAA,UACGjB,KAAK,CAACmB,GAAG,CAACC,QAAQ,iBACjB;MAAA,wBACE;QAAA,UACGA,QAAQ,CAACZ;MAAO;QAAA;QAAA;QAAA;MAAA,QACb,eACN;QAAA,WAAK,MACC,EAACY,QAAQ,CAACN,KAAK,eACnB;UAAQ,OAAO,EAAE,MAAME,IAAI,CAACI,QAAQ,CAACH,EAAE,EAAEG,QAAQ,CAACZ,OAAO,CAAE;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACrE;IAAA,GAPEY,QAAQ,CAACH,EAAE;MAAA;MAAA;MAAA;IAAA,QAQf;EACP;IAAA;IAAA;IAAA;EAAA,QACG;EAEV;EACA;EACA;EACA;EACA;EACA;AACA,CAAC;AAAA,GAtDKnB,SAAS;EAAA,QAKCL,WAAW,EAoBRC,WAAW;AAAA;AAAA,KAzBxBI,SAAS;AAwDf,eAAeA,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}